#!/bin/bash
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

shopt -s extglob

declare maxprocs='1' url _cookies old nousers='0' noreactions='0'

IFS=$'\n'

ucurl() {
    curl -k -L -g -m 120 -s -b "$_cookies" -H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.15.2 Chrome/87.0.4280.144 Safari/537.36" -H "Accept-Encoding: gzip, deflate" --compressed "$@"
}

get_user() {
    [ -z "$1" ] && return
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)/[\&?]tooltip=true\&.*$ ]] || { echo "improper url - $1" >&2; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "m-$id" ] && return
    echo "$1" >&2
    local -r t="$(ucurl -b "$2" "$1" | jq -r '.html.content')"

    {
    echo "$id"
    echo "$(sed -n '/<div class="memberProfileBanner memberTooltip-header.*url(/{s#.*url(##;s#^/[^/]#'"$url"'\0#;s#^//#https://#;s/?.*//;p;q}' <<< "$t")" #background
    reliq '
        . a href=b>/misc/location-info | "%i\n",
        . img src | "%(src)v\n" / sed "s#^/[^/]#'"$url"'\0#;s#^//#https://#;s/?.*//; q",
        . dl .pairs .pairs--inline m@">Joined<"; time datetime | "%(datetime)v\n",
        . dl .pairs .pairs--inline m@">Last seen<"; time datetime | "%(datetime)v\n",
        . span .userTitle | "%i\n",
        . h4 .memberTooltip-name; a; * c@[0] | "%i\n",
        . em; a href | "%(href)v\n",
        . dl m@"<dt>Messages</dt>"; dd; * c@[0] | "%i\n" / sed "/[0-9]/{s/[,\t ]//g;p;q}" "n",
        . dl m@B>"<dt.*>Reaction.*</dt>"; dd; * c@[0] | "%i\n" / sed "/[0-9]/{s/[,\t ]//g;p;q}" "n",
        . dl m@B>"<dt .*title=\".*\">Points</dt>"; dd; * c@[0] | "%i\n" / sed "/[0-9]/{s/[,\t ]//g;p;q}",
    ' <<< "$t"
    } | jq -RnMc '
        .["id"]=input |
        .["background"]=input |
        .["location"]=input |
        .["avatar"]=input |
        .["joined"]=input |
        .["lastseen"]=input |
        .["title"]=input |
        .["name"]=input |
        .["forum"]=input |
        .["messages"]=input |
        .["reactionscore"]=input |
        .["points"]=input' > "m-$id"
}

get_thread() {
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)(/.*)?$ ]] || { echo "improper url - $1"; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "$id" ] && return
    echo "$1" >&2
    local t="$(ucurl -D- "$1")"
    local t2 cookies url_first_delimiter='?'
    [ -z "${1##*\?*}" ] && url_first_delimiter='&'
    cookies="$(sed -n '/^<!DOCTYPE html>/q; /^[sS]et-[cC]ookie: /{s/Set-Cookie: //i;p}' <<< "$t" | sed ':x;s/\r//g;$!{N;s/\n/\;/;bx}')"
    local next

    {
    echo "$1" #link
    echo "$id" #id
    reliq '
        . h1 {
            h1 .p-title-value | "%i\n",
            h1 qid="page-header" | "%i\n",
            h1 .MessageCard__thread-title | "%i\n"
        } / sed ":x; s/<[^>]*>//g; $!{N;s/\n/ /;bx}",

        . div .p-description; * data-user-id | "%(data-user-id)v\n",
        . div .p-description; * data-user-id; * c@[0] | "%i\n",
        . div .p-description; time datetime | "%(datetime)v\n",
        . ul .p-breadcrumbs -.p-breadcrumbs--bottom; span | "%i/" / echo "" "\n",
        . a class=b>tagItem | "%i\n" / sed ":x; s/\t//g; /^$/d; $!{N;s/\n/|/;bx}; s/|$//; s/|\+/|/g",
        . form data-xf-init="poll-block ajax-submit"; h2 .block-header | "%i\n" / sed "s/\t//g; s/<[^>]*>//g; s/^ *//; s/ *$//; /^$/d;",
        . form data-xf-init="poll-block ajax-submit"; li; {
            . h3 .pollResult-response | "%i\n",
            . span .pollResult-votes | "%i\n" / sed "s/\t//g; s/<[^>]*>//g; s/^ *//; s/ *$//; /^$/d; s/^.* //"
        } | tr "\n" "\a" echo "" "\t" / echo "" "\n"' <<< "$t"
    local xfToken="$(reliq 'html data-csrf | "%(data-csrf)v\n"' <<< "$t")"
    [ -z "$xfToken" ] && xfToken="$(reliq 'input name="_xfToken" value | "%(value)v\n" / line [1]' <<< "$t")" && \
    [ -z "$xfToken" ] && xfToken="$(sed -n "/^[ \t]*csrf: '[0-9]*,[a-f0-9]*',/{s/.*: '//;s/'.*//;p;q}" <<< "$t")"

    while :
    do
        for i in $([ -z "$next" ] && tr -d '\r\n\t\a' <<< "$t" |  reliq 'div #thread-main-section; div .MessageCard l@[1] | "%i\n"') $(tr -d '\r\n\t\a' <<< "$t" | reliq 'article id, div #B>post-[0-9]*, div .block-container; div .MessageCard | "%i\n"')
        do
            {
            reliq '
                . h4 class=b>message-name; * data-user-id | "%(data-user-id)v\n",
                . div .MessageCard__avatar; a data-user-id | "%(data-user-id)v\n",

                . h4 class=b>message-name; * c@[0] | "%i\n",
                . * .MessageCard__user-info__name; * c@[0] | "%i\n",

                . E>(span|div) #B>post-[0-9]* | "%(id)v\n" / sed "s/^post-//;q",

                . * class=b>message-attribution-main; time datetime | "%(datetime)v\n",
                . * .MessageCard__date-created; time datetime .u-dt | "%(datetime)v\n" / line [1],

                . article class=b>message-body; div .bbWrapper | "%i\n",
                . div .MessageCard__content-inner; div .bbWrapper | "%i\n",

                . ul .attachmentList | "%i\n",
                . div #signature-content-wrapper; div .bbWrapper | "%i\n"
            ' <<< "$i"

            [ "$nousers" -eq '0' ] && get_user "$(reliq 'h4 class=b>message-name; a data-user-id href | "'"$url"'%(href)v'"$url_first_delimiter"'tooltip=true&_xfWithData=1&_xfToken='"$xfToken"'&_xfResponseType=json\n", div .MessageCard__avatar; a data-user-id href | "'"$url"'%(href)v'"$url_first_delimiter"'tooltip=true&_xfWithData=1&_xfToken='"$xfToken"'&_xfResponseType=json\n"' <<< "$i")" "$cookies"

            if [ "$noreactions" -eq '0' ]
            then
                t2="$(reliq 'a .reactionsBar-link href | "'"$url"'%(href)v\n"' <<< "$i")"
                if [ -n "$t2" ] #reactions
                then
                    t2="$t2${url_first_delimiter}_xfRequestUri=&_xfWithData=1&_xfToken=$xfToken&_xfResponseType=json"
                    echo "$t2" >&2
                    ucurl -b "$cookies" "$t2" | jq -r '.html.content' | tr -d '\n\t' | reliq '. div .contentRow; {
                        . * .username data-user-id | "%(data-user-id)v\n",
                        . * .username data-user-id; * c@[0] | "%i\n",
                        . time .u-dt datetime | "%(datetime)v\n",
                        . span .reaction; img title | "%(title)v\n"
                    } | tr "\n" "|" echo "" "^" / echo "" "\n"'
                else
                    echo
                fi
            else
                echo
            fi
            } | paste -sd '\t'
        done

        next="$(reliq 'div .block-outer; a .pageNav-jump .pageNav-jump--next href | "'"$url"'%(href)v\n" / line [1]' <<< "$t")"
        grep -Eq '/page-[0-9]*(\?.*)?/?(#.*)?$' <<< "$next" || break
        echo "$next" >&2
        t="$(ucurl -b "$cookies" "$next")"
    done
    } | jq -RnMcs '
        (inputs | split("\n")) as $lines |
        .["link"]=$lines[0] |
        .["id"]=$lines[1] |
        .["title"]=$lines[2] |
        .["user_id"]=$lines[3] |
        .["user"]=$lines[4] |
        .["date"]=$lines[5] |
        .["path"]=$lines[6] |
        .["tags"]=($lines[7] | split("|")) |
        .["poll"]=($lines[8:10] | {
            ("title"):.[0],
            ("answers"):(.[1] | split("\t")[:-2] | map(split("")[:-1] | {
                ("option"):.[0],
                ("votes"):.[1]
            }))
        }) |
        .["posts"]=($lines[10:-1] | map(split("\t") | {
            ("user_id"):(.[0]+.[1]),
            ("user"):(.[2]+.[3]),
            ("id"):.[4],
            ("date"):(.[5]+.[6]),
            ("text"):(.[7]+.[8]),
            ("attachments"):(.[9]+.[10]),
            ("reactions"):(.[11] | split("^")[:-1] | map(split("|")[:-1] | {
                ("user_id"):.[0],
                ("user"):.[1],
                ("date"):.[2],
                ("reaction"):.[3]
            }))
        }))' > "$id"
}

get_category() {
    for i in $(reliq '* .node-title; a href -href=b>/link-forums/ | "'"$url"'%(href)v\n"' <&0)
    do
        get_forum "$i"
    done
}

get_forum() {
    local t next
    echo "$1" >&2
    t="$(ucurl "$1")"
    while :
    do
        for j in $(reliq '* .structItem-title; a href | "'"$url"'%(href)v\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_thread "$j" &
        done

        next="$(reliq 'div .block-outer; a .pageNav-jump .pageNav-jump--next href | "'"$url"'%(href)v\n" / line [1]' <<< "$t")"
        grep -Eq '/page-[0-9]*(\?.*)?/?(#.*)?$' <<< "$next" || break
        echo "$next" >&2
        t="$(ucurl "$next")"
    done
    get_category <<< "$t"
}

get_tag() {
    local t next
    echo "$1" >&2
    t="$(ucurl "$1")"
    while :
    do
        for j in $(reliq 'div class=b>contentRow; a href -data-user-id | "'"$url"'%(href)v\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_thread "$j" &
        done

        next="$(reliq 'div .block-outer .block-outer--after; a .pageNav-jump .pageNav-jump--next href | "'"$url"'%(href)v\n"' <<< "$t")"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        echo "$next" >&2
        t="$(ucurl "$next")"
    done
}

get_old_thread() {
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)[/]?$ ]] || { echo "improper url - $1"; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "$id" ] && return
    echo "$1" >&2
    local t="$(ucurl "$1")" t2 next messageUserBlock avatar

    {
    echo "$1" #link
    echo "$id" #id
    reliq '
        . div class=b>titleBar; h1 | "%i\n", div #header; h1 | "%i\n" / sed ":x; s/<[^>]*>//g; $!{N;s/\n/ /;bx}",
        . p #pageDescription; a .username href | "%(href)v\n" / sed "s/^.*[\/.]\([0-9]\+\)/\1/; s/[^0-9]$//",
        . p #pageDescription; a .username | "%i\n",
        . p #pageDescription; * .DateTime | "%i\n",
        . span .crumbs; span itemprop=B>"[a-z]*"; * c@[0] | "%i/" / echo "" "\n",
        . ul .tagList; a .tag | "%i|" / sed "s/<[^>]*>[^<]*<\/[^>]*>//g; s/|$//" echo "" "\n"
    ' <<< "$t"

    while :
    do
        for i in $(tr -d '\n\t' <<< "$t" | reliq 'ol #messageList; li #E>post-[0-9]* data-author l@[1]')
        do
            {
            echo "$(reliq 'li data-author l@[0] | "%(data-author)v\n"' <<< "$i")" #user
            messageUserBlock="$(reliq 'div class=b>messageUserBlock | "%i\n"' <<< "$i")"
            avatar="$(reliq '* class=b>avatar; img src | "'"$url"'/%(src)v\n" / line [1]' <<< "$messageUserBlock")"
            if [ -z "$avatar" ]
            then
                echo "$(reliq 'span class="img m" style | "%(style)v\n" / sed "s#^.*/avatars/m/[0-9]*/##; s#\..*##"' <<< "$messageUserBlock")" #user_id
                echo "$(reliq 'span class="img m" style | "'"$url"'%(style)v\n" / sed "s/?[0-9]*'\'')//; s/background-image: url('\''/\//; s/'\'')$//"' <<< "$messageUserBlock")" #avatar
            else
                [[ "$avatar" =~ /([[:digit:]]*)\.[[:alpha:]]*?(\?.*)$ ]] && echo "${BASH_REMATCH[1]}" || echo
                echo "${avatar%\?[[:digit:]]*}" #avatar
            fi
            echo "$(reliq 'h3 .userText; em class=b>userTitle | "%i\n"' <<< "$messageUserBlock")" #user_title
            echo "$(reliq 'h3 .userText; em class=b>userBanner; * c@[0] | "%i\n" / sed "/^[ \t]*$/d"' <<< "$messageUserBlock")" #user_banner
            reliq '. dl; {
                    . dt; * c@[0] | "%i\n",
                    . dd; * c@[0] | "%i\n"
                } | tr "\n" "/" echo "" "|" / echo "" "\n"
            ' <<< "$messageUserBlock" #user_extra
            echo "$(reliq 'li data-author l@[0] #B>post-[0-9]* | "%(id)v\n" / sed "s/^post-//"' <<< "$i")" #id
            echo "$(reliq 'div .messageContent; article | "%i\n"' <<< "$i")" #text
            } | sed ':x;$!{N;s/\n/\t/;bx}'
        done

        next="$(reliq 'nav; a class href=Be>"/page-[0-9]*" m@B>"^[^0-9]*&gt;" | "'"$url"'/%(href)v\n" / line [-]' <<< "$t")"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        echo "$next" >&2
        t="$(ucurl "$next")"
    done
    } | jq -RnMcs '
        (inputs | split("\n")) as $lines |
        .["link"]=$lines[0] |
        .["id"]=$lines[1] |
        .["title"]=$lines[2] |
        .["user_id"]=$lines[3] |
        .["user"]=$lines[4] |
        .["date"]=$lines[5] |
        .["path"]=$lines[6] |
        .["tags"]=($lines[7] | split("|")) |
        .["posts"]=($lines[8:-1] | map(split("\t") | {
            ("user"):.[0],
            ("user_id"):.[1],
            ("avatar"):.[2],
            ("user_title"):.[3],
            ("user_banner"):.[4],
            ("user_extra"):(.[5] | split("|")[:-1] | map(split("/")[:-1] | {
                ("name"):.[0],
                ("value"):.[1]
            })),
            ("id"):.[6],
            ("text"):.[7]
        }))' > "$id"
}

get_old_category() {
    for i in $(reliq 'h3 .nodeTitle; a -href=B>".\?#.*" href | "'"$url"'/%(href)v\n"' <&0)
    do
        get_old_forum_tag "$i"
    done
}

get_old_forum_tag() {
    local t next
    echo "$1" >&2
    t="$(ucurl "$1")"
    while :
    do
        for j in $(reliq 'li id; div .titleText; h3 .title; a href | "'"$url"'/%(href)v\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_old_thread "$j" &
        done

        next="$(reliq 'nav; a class href=Be>"/page-[0-9]*" m@B>"^[^0-9]*&gt;" | "'"$url"'/%(href)v\n" / line [-]' <<< "$t")"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        echo "$next" >&2
        t="$(ucurl "$next")"
    done
    get_old_category <<< "$t"
}

baseurl() {
    [[ "$1" =~ ^(http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+)(/.*)?$ ]] && echo "${BASH_REMATCH[1]}"
}

usage() {
    printf '%s [OPTION]... [URL]...\n' "${0##*/}"
    printf 'Download, convert to json and save xenforo forums from URL.\n\n'
    printf 'Options:\n  -d,\t--dir DIR\t\tchange directory to DIR\n'
    printf '  -p,\t--max-procs NUM\t\tset number of processes to run at a time\n'
    printf '  -b,\t--cookie DATA|FILENAME\tpass cookie to curl\n'
    printf '  -t,\t--thread URL\t\tpass URL as thread link\n'
    printf '  -T,\t--tag URL\t\tpass URL as tag link\n'
    printf '  -f,\t--forum URL\t\tpass URL as forum link\n'
    printf '  -c,\t--category URL\t\tpass URL as category link, can be used to download the whole forum\n'
    printf '  -o,\t--old\t\t\tuse old format\n'
    printf '  -n,\t--no-reactions\t\tdo not download reactions to posts\n'
    printf '  -N,\t--no-users\t\tdo not download users\n'
    printf '  -h,\t--help\t\t\tshow this message\n'
}

[ "$#" -eq 0 ] && { usage >&2; exit 1; }

while [ "$#" -gt 0 ]
do
    case "$1" in
        -d|--dir) cd "$2" || break; shift;;
        -t|--thread)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_thread "$2"
            else
                get_thread "$2"
            fi
            shift;;
        -f|--forum)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_forum_tag "$2"
            else
                get_forum "$2"
            fi
            shift;;
        -T|--tag)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_forum_tag "$2"
            else
                get_tag "$2"
            fi
            shift;;
        -c|--category)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                ucurl "$2" | get_old_category "$2"
            else
                ucurl "$2" | get_category "$2"
            fi
            shift;;
        -b|--cookie) _cookies="$2"; shift;;
        -p|--max-procs) maxprocs="$2"; shift;;
        -o|--old) old='1';;
        -n|--no-reactions) noreactions='1';;
        -N|--no-users) nousers='1';;
        -h|--help) usage >&2; exit;;
        -*) usage >&2; exit 1;;
        *) break;;
    esac
    shift
done

while [ "$#" -gt 0 ]
do
    url="$(baseurl "$1")"
    case "$1" in
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])@(thread?(s)|topic?(s))/*)
            if [ -n "$old" ]
            then
                get_old_thread "$1"
            else
                get_thread "$1"
            fi;;
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])forum?(s)/*)
            if [ -n "$old" ]
            then
                get_old_forum_tag "$1"
            else
                get_forum "$1"
            fi;;
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])tag?(s)/*)
            if [ -n "$old" ]
            then
                get_old_forum_tag "$1"
            else
                get_tag "$1"
            fi;;
        *)
            if [ -n "$old" ]
            then
                ucurl "$1" | get_old_category
            else
                ucurl "$1" | get_category
            fi;;
    esac
    shift
done
